<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>性能测试 on Kylin Blog</title>
    <link>https://kylinhou.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</link>
    <description>Recent content in 性能测试 on Kylin Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyleft@Kevin Tan</copyright>
    <lastBuildDate>Tue, 04 Oct 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kylinhou.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>linux下安装nload</title>
      <link>https://kylinhou.github.io/posts/nload-linux%E5%AE%89%E8%A3%85nload/</link>
      <pubDate>Tue, 04 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kylinhou.github.io/posts/nload-linux%E5%AE%89%E8%A3%85nload/</guid>
      <description>&lt;h1 id=&#34;linux下安装nload&#34;&gt;linux下安装nload&lt;/h1&gt;

&lt;h2 id=&#34;centos下安装nload监控网卡的流量情况&#34;&gt;centos下安装nload监控网卡的流量情况&lt;/h2&gt;

&lt;h4 id=&#34;1-安装依赖包&#34;&gt;1、安装依赖包&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;yum install -y gcc gcc-c++ ncurses-devel make wget
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>运行java_vuser时添加负载机运行失败</title>
      <link>https://kylinhou.github.io/posts/loadrunner-%E8%BF%90%E8%A1%8Cjava_vuser%E8%B4%9F%E8%BD%BD%E6%9C%BA%E8%BF%90%E8%A1%8C%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 28 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kylinhou.github.io/posts/loadrunner-%E8%BF%90%E8%A1%8Cjava_vuser%E8%B4%9F%E8%BD%BD%E6%9C%BA%E8%BF%90%E8%A1%8C%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;h1 id=&#34;运行java-vuser时添加负载机运行失败&#34;&gt;运行java vuser时添加负载机运行失败&lt;/h1&gt;

&lt;h3 id=&#34;问题描述&#34;&gt;问题描述&lt;/h3&gt;

&lt;p&gt;这次测试的接口是调用rpc，tps到2、3万，场景中已经添加了7台负载机，但是负载机的cpu使用仍然达到100%，负载机的性能已经影响到本次测试了，所以想多添加几台负载机。奇怪的是新添加的几台负载机运行场景之后，vuser直接是failed状态，不能正常运行，脚本中引用到的jar文件已经放到了相应的位置，但是就是不行。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>loadrunner返回信息乱码解决方案</title>
      <link>https://kylinhou.github.io/posts/loadrunner-%E8%BF%94%E5%9B%9E%E4%BF%A1%E6%81%AF%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Tue, 13 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kylinhou.github.io/posts/loadrunner-%E8%BF%94%E5%9B%9E%E4%BF%A1%E6%81%AF%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;h1 id=&#34;loadrunner返回信息乱码解决方案&#34;&gt;loadrunner返回信息乱码解决方案&lt;/h1&gt;

&lt;h2 id=&#34;问题描述&#34;&gt;问题描述&lt;/h2&gt;

&lt;p&gt;loadrunner是一个很强大的工具，但是对于中文的支持并不友好，从服务器返回的信息如果包含中文，显示将会是乱码。&lt;/p&gt;

&lt;p&gt;本教程可以轻松查看乱码信息，使信息更直观。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Loadrunner参数化使用mysql数据源</title>
      <link>https://kylinhou.github.io/posts/loadrunner-loadrunner%E5%8F%82%E6%95%B0%E5%8C%96%E4%BD%BF%E7%94%A8mysql%E6%95%B0%E6%8D%AE%E6%BA%90/</link>
      <pubDate>Fri, 02 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kylinhou.github.io/posts/loadrunner-loadrunner%E5%8F%82%E6%95%B0%E5%8C%96%E4%BD%BF%E7%94%A8mysql%E6%95%B0%E6%8D%AE%E6%BA%90/</guid>
      <description>&lt;h1 id=&#34;loadrunner-参数化使用mysql数据源&#34;&gt;Loadrunner 参数化使用mysql数据源&lt;/h1&gt;

&lt;h2 id=&#34;问题概述&#34;&gt;问题概述&lt;/h2&gt;

&lt;p&gt;在使用loadrunner进行性能测试的过程中，参数化是非常重要的一个操作，有时候我们参数化的数据需要跟数据库中的数据一致才能有效的完成测试。我们可以选择将数据库中的对应字段的数据导出到文件，然后把数据copy到脚本文件中，但是还有更简单的方法，我们可以直接使用loadrunner连接我们的数据库，将对应字段的数据取出直接保存到参数化脚本文件中。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>loadrunner利用代理模式录制手机脚本</title>
      <link>https://kylinhou.github.io/posts/loadrunner-loadrunner%E5%88%A9%E7%94%A8%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E5%BD%95%E5%88%B6%E6%89%8B%E6%9C%BA%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Fri, 26 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kylinhou.github.io/posts/loadrunner-loadrunner%E5%88%A9%E7%94%A8%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E5%BD%95%E5%88%B6%E6%89%8B%E6%9C%BA%E8%84%9A%E6%9C%AC/</guid>
      <description>&lt;h1 id=&#34;loadrunner利用代理模式录制手机脚本&#34;&gt;loadrunner利用代理模式录制手机脚本&lt;/h1&gt;

&lt;p&gt;loadrunner12有手机版，可以直接在手机上录制脚本，但是需要root手机&lt;/p&gt;

&lt;p&gt;loadrunner11和loadrunner12电脑版也是可以录制手机脚本的，设置一下代理就可以。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux下安装loadrunner负载组件</title>
      <link>https://kylinhou.github.io/posts/loadrunner-linux%E4%B8%8B%E5%AE%89%E8%A3%85loadrunner%E8%B4%9F%E8%BD%BD%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Tue, 23 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kylinhou.github.io/posts/loadrunner-linux%E4%B8%8B%E5%AE%89%E8%A3%85loadrunner%E8%B4%9F%E8%BD%BD%E7%BB%84%E4%BB%B6/</guid>
      <description>&lt;h1 id=&#34;linux下安装loadrunner负载组件&#34;&gt;linux下安装loadrunner负载组件&lt;/h1&gt;

&lt;p&gt;有时候我们的windows压测机的性能不够，需要使用linux服务器充当负载机，下面说一下linux上安装loadrunner负载组件的整个过程。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>centos下安装nmon</title>
      <link>https://kylinhou.github.io/posts/nmon-%E5%AE%89%E8%A3%85nmon/</link>
      <pubDate>Thu, 23 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kylinhou.github.io/posts/nmon-%E5%AE%89%E8%A3%85nmon/</guid>
      <description>&lt;h1 id=&#34;centos下安装nmon&#34;&gt;centos下安装nmon&lt;/h1&gt;

&lt;h3 id=&#34;nmon的安装&#34;&gt;nmon的安装&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;mkdir /usr/local/nmon
cd /usr/local/nmon
wget http://sourceforge.net/projects/nmon/files/nmon_linux_14i.tar.gz
tar zxvf nmon_linux_14i.tar.gz
chmod 777 nmon_x86_64_sles11
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>loadrunner学习</title>
      <link>https://kylinhou.github.io/posts/loadrunner-loadrunner%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Thu, 23 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kylinhou.github.io/posts/loadrunner-loadrunner%E5%AD%A6%E4%B9%A0/</guid>
      <description>&lt;h1 id=&#34;loadrunner学习&#34;&gt;loadrunner学习&lt;/h1&gt;

&lt;h2 id=&#34;loadrunner介绍&#34;&gt;loadrunner介绍&lt;/h2&gt;

&lt;p&gt;**LoadRunner **是 HP Mercury Interactive用来测试应用程序性能的工具&lt;/p&gt;

&lt;p&gt;LoadRunner 通过模拟一个多用户并行工作的环境来对应用程序进行负载测试。通过使用最少的硬件资源，这些虚拟用户提供一致的、可重复并可度量的负载，像实际用户一样使用所要测试的应用程序。LoadRunner 深入的报告和图提供了评估应用程序性能所需的信息。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>查看rpc是否已开启</title>
      <link>https://kylinhou.github.io/posts/rpc-%E6%9F%A5%E7%9C%8Brpc%E6%98%AF%E5%90%A6%E5%B7%B2%E5%BC%80%E5%90%AF/</link>
      <pubDate>Thu, 23 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kylinhou.github.io/posts/rpc-%E6%9F%A5%E7%9C%8Brpc%E6%98%AF%E5%90%A6%E5%B7%B2%E5%BC%80%E5%90%AF/</guid>
      <description>&lt;h1 id=&#34;查看rpc是否已开启&#34;&gt;查看rpc是否已开启&lt;/h1&gt;

&lt;p&gt;在使用loadrunner进行性能测试的过程中，我们可以监控服务器的资源使用情况，那么需要服务器开启rpc功能。下面简单介绍一下开启rpc的方法。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>